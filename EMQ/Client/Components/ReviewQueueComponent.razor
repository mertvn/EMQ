@using EMQ.Shared.Quiz.Entities.Concrete
@using Microsoft.Extensions.Logging
@using EMQ.Shared.Library.Entities.Concrete.Dto.Request
@using EMQ.Shared.Core.UI
@using EMQ.Shared.Core
@inject HttpClient _client
@inject ILogger<GuessInputComponent> _logger

<table class="table">
    <tr>
        <th>Id</th>
        <th>Source Title</th>
        <th>Song Title</th>
        <th>Url</th>
        @* <th>Type</th> *@
        <th>Is Video</th>
        <th>Submitted By</th>
        <th>Submitted On</th>
        <th>Analysis</th>
        <th>Duration</th>
        <th>Status</th>
        <th>Notes</th>
    </tr>
    @foreach (var rq in CurrentRQs)
    {
        <tr>
            <td>@rq.id</td>
            <td>
                @* todo link might be different from what's displayed *@
                <a href="@rq.Song.Sources.First().Links.First(x => x.Type == SongSourceLinkType.VNDB).Url">
                    @(Converters.GetSingleTitle(rq.Song.Sources.First().Titles).LatinTitle)
                </a>
            </td>
            <td>
                @(Converters.GetSingleTitle(rq.Song.Titles).LatinTitle)
            </td>
            <td>
                <a href="@rq.url">@rq.url</a>
            </td>
            @* <td>@rq.type</td> *@
            <td>@rq.is_video</td>
            <td>@rq.submitted_by</td>
            <td>@rq.submitted_on.ToString("s")</td>
            <td>@rq.analysis</td>
            <td>@(rq.duration?.ToString("mm\\:ss"))</td>
            <td style="color: @UiHelpers.Bools2Color(@rq.status == ReviewQueueStatus.Approved, @rq.status == ReviewQueueStatus.Rejected, "green", "red")">
                @rq.status
            </td>
            <td>@rq.reason</td>
        </tr>
    }
</table>
