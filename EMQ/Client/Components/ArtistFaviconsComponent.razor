@using EMQ.Shared.Quiz.Entities.Concrete

@if (LinksOrdered != null)
{
    @for (int i = 0; i < LinksOrdered.Length; i++)
    {
        var songArtistLink = LinksOrdered[i];
        @if (i == 0 || ShowDetails || IsArtistPage)
        {
            string iconSrc;
            switch (songArtistLink.Type)
            {
                case SongArtistLinkType.VNDBStaff:
                    iconSrc = "assets/favicon/vndb.ico";
                    break;
                case SongArtistLinkType.MusicBrainzArtist:
                    iconSrc = "assets/favicon/musicbrainz.png";
                    break;
                case SongArtistLinkType.VGMdbArtist:
                    iconSrc = "assets/favicon/vgmdb.ico";
                    break;
                case SongArtistLinkType.ErogameScapeCreater:
                    iconSrc = "assets/favicon/egs.ico";
                    break;
                case SongArtistLinkType.AnisonInfoPerson:
                    iconSrc = "assets/favicon/anison.ico";
                    break;
                case SongArtistLinkType.WikidataItem:
                    iconSrc = "assets/favicon/wikidata.ico";
                    break;
                case SongArtistLinkType.AniDBCreator:
                    iconSrc = "assets/favicon/anidb.png";
                    break;
                case SongArtistLinkType.Unknown:
                default:
                    iconSrc = "assets/question-circle.svg";
                    break;
            }

            <a class="songArtistsTitle link-primary" href="@songArtistLink.Url" target="_blank">
                <img width="16px" height="16px"
                     src="@iconSrc" alt="link"
                     style="margin-left: 7px; scale: 1.2;">
            </a>
        }
    }

    @if (!IsArtistPage && LinksOrdered.Length > 1)
    {
        @if (ShowDetails)
        {
            <span @onclick="Onclick_ToggleShowDetails" style="cursor: pointer; margin-left: 6px;">&lt;&lt;</span>
        }
        else
        {
            <span @onclick="Onclick_ToggleShowDetails" style="cursor: pointer; margin-left: 6px;">&gt;&gt;</span>
        }
    }
}

@code {

    [Parameter]
    public List<SongArtistLink> Links { get; set; } = null!;

    [Parameter]
    public bool IsArtistPage { get; set; }

    private SongArtistLink[]? LinksOrdered { get; set; }

    private bool ShowDetails { get; set; }

    private void Onclick_ToggleShowDetails()
    {
        ShowDetails = !ShowDetails;
    }

    protected override void OnParametersSet()
    {
        LinksOrdered = Links.OrderBy(x => x.Type).ToArray();
    }

}
