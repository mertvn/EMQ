@using EMQ.Shared.Library.Entities.Concrete
@using EMQ.Shared.Core
@using EMQ.Shared.Core.UI
@using EMQ.Shared.Quiz.Entities.Concrete
@using System.Globalization
@inject HttpClient _client

@if (LibraryStats is { } libraryStats)
{
    <div id="libraryStats">
    <Blazorise.Tabs SelectedTab="@SelectedTab" SelectedTabChanged="@OnSelectedTabChanged">
    <Items>
        <Blazorise.Tab Name="TabGeneral">General</Blazorise.Tab>
        <Blazorise.Tab Name="TabSong">Song</Blazorise.Tab>
        <Blazorise.Tab Name="TabSongDifficulty">Song difficulty</Blazorise.Tab>
        <Blazorise.Tab Name="TabSongRating">Song rating</Blazorise.Tab>
        <Blazorise.Tab Name="TabVNYear">VN year</Blazorise.Tab>
        <Blazorise.Tab Name="TabVN">VN</Blazorise.Tab>
        <Blazorise.Tab Name="TabArtist">Artist</Blazorise.Tab>
        <Blazorise.Tab Name="TabUploaders">Uploaders</Blazorise.Tab>
    </Items>
    <Content>
    @if (true)
    {
        List<LibraryStatsAm> am = libraryStats.am;
        List<LibraryStatsAm> amAvailable = libraryStats.amAvailable;
        List<LibraryStatsMsm> msm = libraryStats.msm;
        List<LibraryStatsMsm> msmAvailable = libraryStats.msmAvailable;

        <Blazorise.TabPanel Name="TabGeneral">
            <ul style="padding-left: 17px; padding-top: 8px;">
                <li>VNDB import date: @Constants.ImportDateVndb</li>
                <li>EGS import date: @Constants.ImportDateEgs</li>
                <li>MusicBrainz import date: @Constants.ImportDateMusicBrainzActual</li>
                <li>VGMdb import date: @Constants.ImportDateVgmdb</li>
            </ul>

            <div>
                <p>Total:</p>
                <ul>
                    <li>Songs: @libraryStats.TotalMusicCount</li>
                    <li>VNs: @libraryStats.TotalMusicSourceCount</li>
                    <li>Artists: @libraryStats.TotalArtistCount</li>
                </ul>
            </div>

            <div>
                <p>Available:</p>
                <ul>
                    <li>Songs: @libraryStats.AvailableMusicCount (@(Utils.PercentageStr(libraryStats.AvailableMusicCount, libraryStats.TotalMusicCount)))</li>
                    <li>VNs: @libraryStats.AvailableMusicSourceCount (@(Utils.PercentageStr(libraryStats.AvailableMusicSourceCount, libraryStats.TotalMusicSourceCount)))</li>
                    <li>Artists: @libraryStats.AvailableArtistCount (@(Utils.PercentageStr(libraryStats.AvailableArtistCount, libraryStats.TotalArtistCount)))</li>
                </ul>
            </div>
        </Blazorise.TabPanel>


        <Blazorise.TabPanel Name="TabSong">
            <div>
                <ul>
                    <li>Songs with only video links: @libraryStats.VideoLinkCount</li>
                    <li>Songs with only sound links: @libraryStats.SoundLinkCount</li>
                    <li>Songs with both links: @libraryStats.BothLinkCount</li>
                </ul>
            </div>

            <div>
                <p>Total:</p>
                <ul>
                    @for (int index = 0; index < libraryStats.TotalLibraryStatsMusicType.Count; index++)
                    {
                        var libraryStatsMusicType = libraryStats.TotalLibraryStatsMusicType[index];
                        <li>@libraryStatsMusicType.Type: @libraryStatsMusicType.MusicCount</li>
                    }
                </ul>
            </div>

            <div>
                <p>Available:</p>
                <ul>
                    @for (int index = 0; index < libraryStats.AvailableLibraryStatsMusicType.Count; index++)
                    {
                        var libraryStatsMusicType = libraryStats.AvailableLibraryStatsMusicType[index];
                        <li>@libraryStatsMusicType.Type: @libraryStatsMusicType.MusicCount (@Utils.PercentageStr(libraryStats.AvailableLibraryStatsMusicType[index].MusicCount, libraryStats.TotalLibraryStatsMusicType[index].MusicCount))</li>
                    }
                </ul>
            </div>

            <table style="max-width: 400px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">Warning</th>
                    <th class="libraryStatsHeader">Songs</th>
                </tr>
                @foreach ((MediaAnalyserWarningKind warningKind, int count) in libraryStats.Warnings)
                {
                    <tr class="libraryStatsRow">
                        <td>@warningKind.GetDisplayName()</td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Warning(warningKind); })">@count</b>
                        </td>
                    </tr>
                }
            </table>

        </Blazorise.TabPanel>


        <Blazorise.TabPanel Name="TabSongDifficulty">
            <p>Songs that have been played at least once: </p>
            <table style="max-width: 400px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">Difficulty level</th>
                    <th class="libraryStatsHeader">Songs</th>
                </tr>
                @foreach ((var songDifficultyLevel, int count) in libraryStats.SongDifficultyLevels)
                {
                    <tr class="libraryStatsRow">
                        <td>@songDifficultyLevel.GetDisplayName()</td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Difficulty(songDifficultyLevel); })">@count</b>
                        </td>
                    </tr>
                }
            </table>
        </Blazorise.TabPanel>

        <Blazorise.TabPanel Name="TabSongRating">
            <h5 style="margin-top: 5px;">Highly rated songs (at least 3 votes)</h5>
            <table style="max-width: 900px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">Song</th>
                    <th class="libraryStatsHeader">Rating</th>
                    <th class="libraryStatsHeader">Vote count</th>
                </tr>
                @foreach (var song in libraryStats.HighlyRatedSongs)
                {
                    <tr class="libraryStatsRow">
                        <td>@song.ToStringLatin()</td>
                        <td>@song.VoteAverage.ToString("F2", CultureInfo.InvariantCulture)</td>
                        <td>@song.VoteCount</td>
                    </tr>
                }
            </table>
            <br/>

            <h5 style="margin-top: 5px;">Most voted songs</h5>
            <table style="max-width: 900px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">Song</th>
                    <th class="libraryStatsHeader">Rating</th>
                    <th class="libraryStatsHeader">Vote count</th>
                </tr>
                @foreach (var song in libraryStats.MostVotedSongs)
                {
                    <tr class="libraryStatsRow">
                        <td>@song.ToStringLatin()</td>
                        <td>@song.VoteAverage.ToString("F2", CultureInfo.InvariantCulture)</td>
                        <td>@song.VoteCount</td>
                    </tr>
                }
            </table>
            <br/>
        </Blazorise.TabPanel>

        <Blazorise.TabPanel Name="TabVNYear">
            <table style="max-width: 400px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">Year</th>
                    <th class="libraryStatsHeader">Songs</th>
                    <th class="libraryStatsHeader">Percentage</th>
                </tr>
                @foreach ((DateTime year, int count) in libraryStats.msYearAvailable)
                {
                    <tr class="libraryStatsRow">
                        <td>@year.Year.ToString()</td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Year(year); })">@count/@libraryStats.msYear[year]</b>
                        </td>
                        <td style="color: @UiHelpers.Bool2Color(count == libraryStats.msYear[year], "green", "inherit")">
                            <b>@Utils.PercentageStr(count, libraryStats.msYear[year])</b>
                        </td>
                    </tr>
                }
            </table>
        </Blazorise.TabPanel>


        <Blazorise.TabPanel Name="TabVN">
            <div class="libraryStatsDoubleTableOuter">
                <div class="libraryStatsDoubleTableInner">
                    <p>Total:</p>
                    <table>
                        <tr class="libraryStatsHeaders">
                            <th class="libraryStatsHeader">#</th>
                            <th class="libraryStatsHeader">VN</th>
                            <th class="libraryStatsHeader">Songs</th>
                        </tr>
                        @for (int i = 0; i < msm.Count; i++)
                        {
                            var item = msm[i];
                            <tr class="libraryStatsRow">
                                <td>@(i + 1)</td>
                                <td>
                                    <a class="link-primary" href="@(item.MselUrl)" target="_blank">
                                        <span>@item.MstLatinTitle</span>
                                    </a>
                                </td>
                                <td>
                                    <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Mst(item.MstLatinTitle); })">@item.MusicCount</b>
                                </td>
                            </tr>
                        }
                    </table>
                </div>

                <div class="libraryStatsDoubleTableInner">
                    <p>Available:</p>
                    <table>
                        <tr class="libraryStatsHeaders">
                            <th class="libraryStatsHeader">#</th>
                            <th class="libraryStatsHeader">VN</th>
                            <th class="libraryStatsHeader">Songs</th>
                            <th class="libraryStatsHeader">Percentage</th>
                        </tr>
                        @for (int i = 0; i < msmAvailable.Count; i++)
                        {
                            var item = msmAvailable[i];
                            <tr class="libraryStatsRow">
                                <td>@(i + 1)</td>
                                <td>
                                    <a class="link-primary" href="@(item.MselUrl)" target="_blank">
                                        <span>@item.MstLatinTitle</span>
                                    </a>
                                </td>

                                <td>
                                    <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Mst(item.MstLatinTitle); })">@item.AvailableMusicCount/@item.MusicCount</b>
                                </td>
                                <td style="color: @UiHelpers.Bool2Color(item.AvailableMusicCount == @item.MusicCount, "green", "inherit")">
                                    <b>@Utils.PercentageStr(item.AvailableMusicCount, item.MusicCount)</b>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </Blazorise.TabPanel>


        <Blazorise.TabPanel Name="TabArtist">
            <div class="libraryStatsDoubleTableOuter">
                <div class="libraryStatsDoubleTableInner">
                    <p>Total:</p>
                    <table>
                        <tr class="libraryStatsHeaders">
                            <th class="libraryStatsHeader">#</th>
                            <th class="libraryStatsHeader">Artist</th>
                            <th class="libraryStatsHeader">Songs</th>
                        </tr>
                        @for (int i = 0; i < am.Count; i++)
                        {
                            var item = am[i];
                            <tr class="libraryStatsRow">
                                <td>@(i + 1)</td>
                                <td>
                                    @* todo nonlatinalias *@
                                    @if (true)
                                    {
                                        // todo important componentize this
                                        <span>@item.AALatinAlias</span>
                                        foreach (SongArtistLink songArtistLink in item.Links)
                                        {
                                            string iconSrc;
                                            switch (songArtistLink.Type)
                                            {
                                                case SongArtistLinkType.VNDBStaff:
                                                    iconSrc = "assets/favicon/vndb.ico";
                                                    break;
                                                case SongArtistLinkType.MusicBrainzArtist:
                                                    iconSrc = "assets/favicon/musicbrainz.png";
                                                    break;
                                                default:
                                                    continue;
                                            }

                                            <a class="songArtistsTitle link-primary" href="@songArtistLink.Url" target="_blank">
                                                <img width="16px" height="16px"
                                                     src="@iconSrc" alt="link"
                                                     style="margin-left: 6px; scale: 1.2;">
                                            </a>
                                        }
                                    }
                                </td>
                                <td>
                                    <b style="cursor: pointer" @onclick="@(async () => { await Onclick_A(item.AId); })">@item.MusicCount</b>
                                </td>
                            </tr>
                        }
                    </table>
                </div>

                <div class="libraryStatsDoubleTableInner">
                    <p>Available:</p>
                    <table>
                        <tr class="libraryStatsHeaders">
                            <th class="libraryStatsHeader">#</th>
                            <th class="libraryStatsHeader">Artist</th>
                            <th class="libraryStatsHeader">Songs</th>
                            <th class="libraryStatsHeader">Percentage</th>
                        </tr>
                        @for (int i = 0; i < amAvailable.Count; i++)
                        {
                            var item = amAvailable[i];
                            <tr class="libraryStatsRow">
                                <td>@(i + 1)</td>
                                <td>
                                    @* todo nonlatinalias *@
                                    @if (true)
                                    {
                                        <span>@item.AALatinAlias</span>
                                        foreach (SongArtistLink songArtistLink in item.Links)
                                        {
                                            string iconSrc;
                                            switch (songArtistLink.Type)
                                            {
                                                case SongArtistLinkType.VNDBStaff:
                                                    iconSrc = "assets/favicon/vndb.ico";
                                                    break;
                                                case SongArtistLinkType.MusicBrainzArtist:
                                                    iconSrc = "assets/favicon/musicbrainz.png";
                                                    break;
                                                default:
                                                    continue;
                                            }

                                            <a class="songArtistsTitle link-primary" href="@songArtistLink.Url" target="_blank">
                                                <img width="16px" height="16px"
                                                     src="@iconSrc" alt="link"
                                                     style="margin-left: 6px; scale: 1.2;">
                                            </a>
                                        }
                                    }
                                </td>
                                <td>
                                    <b style="cursor: pointer" @onclick="@(async () => { await Onclick_A(item.AId); })">@item.AvailableMusicCount/@item.MusicCount</b>
                                </td>
                                <td style="color: @UiHelpers.Bool2Color(item.AvailableMusicCount == @item.MusicCount, "green", "inherit")">
                                    <b>@Utils.PercentageStr(item.AvailableMusicCount, item.MusicCount)</b>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>

        </Blazorise.TabPanel>


        <Blazorise.TabPanel Name="TabUploaders">
            <table style="max-width: 350px">
                <tr class="libraryStatsHeaders">
                    <th class="libraryStatsHeader">#</th>
                    <th class="libraryStatsHeader">Username</th>
                    <th class="libraryStatsHeader">Total</th>
                    <th class="libraryStatsHeader">Video</th>
                    <th class="libraryStatsHeader">Sound</th>
                </tr>
                @{ int i = 1; }
                @foreach ((string username, var uploaderStats) in libraryStats.UploaderCounts)
                {
                    bool isRobot = username == Constants.RobotNameLower;
                    <tr class="libraryStatsRow">
                        <td>@i</td>
                        <td>
                            @if (isRobot)
                            {
                                <a class="link-primary" href="https://vndb.org/c49124" target="_blank">
                                    <span>@Constants.RobotName</span>
                                </a>
                            }
                            else
                            {
                                @username
                            }
                        </td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Uploader(username); })">@uploaderStats.TotalCount</b>
                        </td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Uploader(username); })">@uploaderStats.VideoCount</b>
                        </td>
                        <td>
                            <b style="cursor: pointer" @onclick="@(async () => { await Onclick_Uploader(username); })">@uploaderStats.SoundCount</b>
                        </td>
                    </tr>
                    i += 1;
                }
            </table>
        </Blazorise.TabPanel>
    }
    </Content>
    </Blazorise.Tabs>
    </div>
}
