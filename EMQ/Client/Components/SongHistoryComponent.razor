@using EMQ.Shared.Quiz.Entities.Concrete
@using EMQ.Shared.Core.UI
@using EMQ.Shared.Core
@inject IJSRuntime _jsRuntime

<div>
    <select id="SongSelectionKind" style="margin: 5px" @oninput="OnSongHistoryFilterChanged">
        @foreach (SongHistoryFilterKind librarySongFilter in Enum.GetValues<SongHistoryFilterKind>())
        {
            <option value="@librarySongFilter">@librarySongFilter.GetDescription()</option>
        }
    </select>
    <label for="SongSelectionKind">Filter</label>

    <button type="button" class="btn btn-secondary" style="float: right" @onclick="@DownloadSongHistoryJson">
        Download JSON
    </button>
</div>

<table class="songHistoryTable" style="width: 100%;">
    <tr class="songHistoryHeaders">
        <th class="songHistoryHeader"></th>
        <th class="songHistoryHeader">#</th>
        <th class="songHistoryHeader">Sources</th>
        <th class="songHistoryHeader">Types</th>
        <th class="songHistoryHeader">Title</th>
        <th class="songHistoryHeader">Artists</th>
    </tr>
    @if (SongsHistory != null)
    {
        @for (int index = 0; index < SongsHistory.Count; index++)
        {
            if (SongsHistory.TryGetValue(index, out var songHistory))
            {
                var song = songHistory.Song;
                string rowBackgroundColor = "initial";
                bool ownPgiExists = songHistory.PlayerGuessInfos.TryGetValue(ClientState.Session?.Player.Id ?? 0, out var ownPgi);
                if (ownPgiExists)
                {
                    rowBackgroundColor = UiHelpers.Bool2Color(ownPgi.IsGuessCorrect, "seagreen", "firebrick");
                }

                bool shouldDisplay = SongHistoryFilter switch
                {
                    SongHistoryFilterKind.All => true,
                    SongHistoryFilterKind.Correct => ownPgiExists && ownPgi.IsGuessCorrect,
                    SongHistoryFilterKind.Wrong => ownPgiExists && !ownPgi.IsGuessCorrect,
                    SongHistoryFilterKind.Rig => ownPgiExists && ownPgi.IsOnList,
                    SongHistoryFilterKind.Erig => ownPgiExists && ownPgi.IsGuessCorrect && songHistory.TimesCorrect == 1,
                    _ => throw new ArgumentOutOfRangeException()
                    };

                @if (!shouldDisplay)
                {
                    continue;
                }

                string key = $"{index}{rowBackgroundColor}";
                // Console.WriteLine(key);
                bool _ = RowDetailsDict.TryGetValue(song.Id, out bool showRowDetail);
                <tr class="songHistoryRow" style="border-bottom: 1px solid gray; background-color: @rowBackgroundColor; cursor: pointer;"
                    @key="@key" @onclick="@(() => Onclick_SongHistoryRow(songHistory))">

                    <td style="padding: 4px; width: 25px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @if (showRowDetail)
                        {
                            <span>▼</span>
                        }
                        else
                        {
                            <span>▶</span>
                        }
                    </td>

                    <td style="padding: 4px; max-width: 380px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @(index + 1)
                    </td>
                    <td style="padding: 4px; max-width: 380px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @if (song.Sources.Count == 1)
                        {
                            <span>@Converters.GetSingleTitle(song.Sources.First().Titles).LatinTitle</span>

                            foreach (var link in song.Sources.First().Links.OrderBy(x => x.Type))
                            {
                                string src;
                                if (link.Url.Contains("vndb.org")) // todo
                                {
                                    src = "assets/favicon/vndb.ico";
                                }
                                else if (link.Url.Contains("musicbrainz.org"))
                                {
                                    src = "assets/favicon/musicbrainz.png";
                                }
                                else if (link.Url.Contains("vgmdb.net"))
                                {
                                    src = "assets/favicon/vgmdb.ico";
                                }
                                else
                                {
                                    // todo?
                                    src = "";
                                }

                                @if (!string.IsNullOrEmpty(src))
                                {
                                    <Blazorise.Tooltip Text="@(link.Name)" Inline="true">
                                        <a class="songSourceVNID link-primary" href="@link.Url" target="_blank">
                                            <img width="16px" height="16px"
                                                 src="@src" alt="link"
                                                 style="margin-left: 8px; scale: 1.2;">
                                        </a>
                                    </Blazorise.Tooltip>
                                }
                            }
                        }
                        else
                        {
                            var otherSources = song.Sources.Where(x => x.Id != song.Sources.First().Id);
                            string joined = string.Join("", otherSources.Select(x => Converters.GetSingleTitle(x.Titles)).Select(y => $"<li>{y.LatinTitle}</li>"));
                            string tooltipText = $"<ul>{joined}</ul>";

                            <span>@Converters.GetSingleTitle(song.Sources.First().Titles).LatinTitle</span>

                            foreach (var link in song.Sources.First().Links.OrderBy(x => x.Type))
                            {
                                string src;
                                if (link.Url.Contains("vndb.org")) // todo
                                {
                                    src = "assets/favicon/vndb.ico";
                                }
                                else if (link.Url.Contains("musicbrainz.org"))
                                {
                                    src = "assets/favicon/musicbrainz.png";
                                }
                                else if (link.Url.Contains("vgmdb.net"))
                                {
                                    src = "assets/favicon/vgmdb.ico";
                                }
                                else
                                {
                                    // todo?
                                    src = "";
                                }

                                @if (!string.IsNullOrEmpty(src))
                                {
                                    <Blazorise.Tooltip Text="@(link.Name)" Inline="true">
                                        <a class="songSourceVNID link-primary" href="@link.Url" target="_blank">
                                            <img width="16px" height="16px"
                                                 src="@src" alt="link"
                                                 style="margin-left: 8px; scale: 1.2;">
                                        </a>
                                    </Blazorise.Tooltip>
                                }
                            }

                            <Blazorise.Tooltip
                                Inline="true"
                                Text="@tooltipText">
                                <span style="margin-left: 8px;"> and @(song.Sources.Count - 1) more...</span>
                            </Blazorise.Tooltip>
                        }
                    </td>
                    <td style="padding: 4px; max-width: 380px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @* todo? *@
                        @string.Join(", ", song.Sources.SelectMany(x => x.SongTypes).Distinct())
                    </td>
                    <td style="padding: 4px; max-width: 380px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @Converters.GetSingleTitle(song.Titles).LatinTitle
                    </td>
                    <td style="padding: 4px; max-width: 380px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                        @if (song.Artists.Count == 1)
                        {
                            <span>@Converters.GetSingleTitle(song.Artists.First().Titles).LatinTitle</span>

                            @* TODO: this is a hack because we don't have dedicated musicbrainz artist links yet*@
                            @if (song.Artists.First().VndbId!.StartsWith("s"))
                            {
                                <a class="songArtistsTitle link-primary" href="@(song.Artists.First().VndbId.ToVndbUrl())" target="_blank">
                                    <img width="16px" height="16px"
                                         src="assets/favicon/vndb.ico" alt="link"
                                         style="margin-left: 6px; scale: 1.2;">
                                </a>
                            }
                            else
                            {
                                <a class="songArtistsTitle link-primary" href="@($"https://musicbrainz.org/artist/{song.Artists.First().VndbId}")" target="_blank">
                                    <img width="16px" height="16px"
                                         src="assets/favicon/musicbrainz.png" alt="link"
                                         style="margin-left: 6px; scale: 1.2;">
                                </a>
                            }
                        }
                        else
                        {
                            var otherSources = song.Artists.Where(x => x.Id != song.Artists.First().Id);
                            string joined = string.Join("", otherSources.Select(x => Converters.GetSingleTitle(x.Titles)).Select(y => $"<li>{y.LatinTitle}</li>"));
                            string tooltipText = $"<ul>{joined}</ul>";

                            <span>@Converters.GetSingleTitle(song.Artists.First().Titles).LatinTitle</span>

                            @* TODO: this is a hack because we don't have dedicated musicbrainz artist links yet*@
                            @if (song.Artists.First().VndbId!.StartsWith("s"))
                            {
                                <a class="songArtistsTitle link-primary" href="@(song.Artists.First().VndbId.ToVndbUrl())" target="_blank">
                                    <img width="16px" height="16px"
                                         src="assets/favicon/vndb.ico" alt="link"
                                         style="margin-left: 6px; scale: 1.2;">
                                </a>
                            }
                            else
                            {
                                <a class="songArtistsTitle link-primary" href="@($"https://musicbrainz.org/artist/{song.Artists.First().VndbId}")" target="_blank">
                                    <img width="16px" height="16px"
                                         src="assets/favicon/musicbrainz.png" alt="link"
                                         style="margin-left: 6px; scale: 1.2;">
                                </a>
                            }

                            <Blazorise.Tooltip
                                Inline="true"
                                Text="@tooltipText">
                                <span style="margin-left: 8px;"> and @(song.Artists.Count - 1) more...</span>
                            </Blazorise.Tooltip>
                        }
                    </td>
                </tr>

                @if (showRowDetail)
                {
                    <tr class="songHistoryRowDetail">
                        <td colspan="6">
                            @* <span>Guess rate: @(Math.Round(song.Stats.CorrectPercentage, 2))% (@song.Stats.TimesCorrect/@song.Stats.TimesPlayed)</span> *@

                            @* @if (ownPgi.PreviousUserSpacedRepetition != null && ownPgi.CurrentUserSpacedRepetition != null) *@
                            @* { *@
                            @*     <ul> *@
                            @*         <li> *@
                            @*             Previous interval: @ownPgi.PreviousUserSpacedRepetition.interval_days days *@
                            @*         </li> *@
                            @*         <li> *@
                            @*             Previous due date: @ownPgi.PreviousUserSpacedRepetition.due_at.ToString("s") *@
                            @*         </li> *@
                            @*         <li> *@
                            @*             Previous review date: @ownPgi.PreviousUserSpacedRepetition.reviewed_at.ToString("s") *@
                            @*         </li> *@
                            @* *@
                            @*         <br/> *@
                            @* *@
                            @*         <li> *@
                            @*             New interval: @ownPgi.CurrentUserSpacedRepetition.interval_days days *@
                            @*         </li> *@
                            @*         <li> *@
                            @*             New due date: @ownPgi.CurrentUserSpacedRepetition.due_at.ToString("s") *@
                            @*         </li> *@
                            @*     </ul> *@
                            @* } *@

                            @if (!string.IsNullOrEmpty(song.ScreenshotUrl))
                            {
                                <ul>
                                    <li>
                                        <a href="@song.ScreenshotUrl" target="_blank">@song.ScreenshotUrl</a>
                                    </li>
                                </ul>
                            }

                            <ul>
                                @foreach (var link in song.Links)
                                {
                                    <li>
                                        <a href="@link.Url" target="_blank">@link.Url</a>
                                    </li>
                                }
                            </ul>

                            <ul>
                                @foreach ((int _, GuessInfo value) in songHistory.PlayerGuessInfos)
                                {
                                    <li style="background-color: @UiHelpers.Bool2Color(value.IsGuessCorrect, "seagreen", "firebrick"); padding-left: 4px;">
                                        @value.Username:
                                        <span> @value.Guess </span>
                                        (@(Math.Round((float)value.FirstGuessMs / 1000, 2))s)
                                        @if (value.IsOnList)
                                        {
                                            <span>(On List)</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </td>
                    </tr>
                }
            }
        }
    }
</table>

<br/>
<details>
    <summary>Player stats</summary>
    <PlayerStatsComponent PlayerStatsDict="PlayerStatsDict"></PlayerStatsComponent>
</details>
