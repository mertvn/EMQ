@using EMQ.Shared.Quiz.Entities.Concrete
@inject HttpClient _client

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EMQ</a>
        <button type="button" title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="HotelPage">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Hotel
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="LibraryPage">
                <span class="oi oi-list" aria-hidden="true"></span> Library
            </NavLink>
        </div>
    </nav>

    <div>
        <ul>
            <li>Rooms: @ClientState.ServerStats.RoomsCount</li>
            @* <li>QMs: @ClientState.ServerStats.QuizManagersCount</li> *@
            <li>Sessions: @ClientState.ServerStats.ActiveSessionsCount/@ClientState.ServerStats.SessionsCount</li>
        </ul>
    </div>
    <div style="position: absolute; bottom: 5px; left: 5px;">
        <a href="https://github.com/mertvn/EMQ">Source code</a>
    </div>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ServerStats? res = await _client.GetFromJsonAsync<ServerStats>("Quiz/GetServerStats");
            if (res is not null)
            {
                ClientState.ServerStats = res;
            }
            StateHasChanged();
        }
    }

}
