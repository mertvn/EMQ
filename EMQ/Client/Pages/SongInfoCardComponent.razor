@using EMQ.Shared.Quiz.Entities.Concrete
@using EMQ.Shared.Core

@if (song != null)
{
    <div class="songInfoCard card">
        <div class="songInfoCardBody card-body">
            <div>
                <div>
                    <h5 class="songSourceSongType">
                        @if (true)
                        {
                            Dictionary<List<string>, List<SongSourceSongType>> songSourceVNIDSongTypes = new();

                            foreach (SongSource songSource in song.Sources)
                            {
                                songSourceVNIDSongTypes.Add(songSource.Links.Select(x => x.Url).ToList(), songSource.SongTypes);
                            }

                            // couldn't get distinct to work
                            List<string> displayedIds = new();

                            @foreach ((List<string> songSourceVNIDs, List<SongSourceSongType>? songTypes) in songSourceVNIDSongTypes)
                            {
                                @foreach (string songSourceVNID in songSourceVNIDs)
                                {
                                    if (!displayedIds.Contains(songSourceVNID))
                                    {
                                        displayedIds.Add(songSourceVNID);

                                        for (int index = 0; index < songTypes.Count; index++)
                                        {
                                            SongSourceSongType songType = songTypes[index];
                                            <span>@songType</span>

                                            if (index + 1 != songTypes.Count)
                                            {
                                                <span>, </span>
                                            }
                                        }

                                        // todo fix underline being too long
                                        <span></span>
                                        <a class="songSourceVNID link-primary" href="@(songSourceVNID)">
                                            <span>(VN)</span>
                                        </a>
                                        <br/>
                                    }
                                }
                            }
                        }
                    </h5>
                    <h5 class="songLatinTitle card-title">@song.Titles.First(x => x.IsMainTitle).LatinTitle</h5>
                </div>
                <div>
                    by
                    @foreach (SongArtist songArtist in song.Artists)
                    {
                        var songArtistTitle = songArtist.Titles.FirstOrDefault(x => x.IsMainTitle) ?? songArtist.Titles.First();

                        <div>
                            <a class="songArtistsLatinTitle link-primary" href="@(songArtist.VndbId.ToVndbUrl())">
                                <span>@songArtistTitle.LatinTitle</span>
                                @if (!string.IsNullOrEmpty(songArtistTitle.NonLatinTitle))
                                {
                                    <span> (@songArtistTitle.NonLatinTitle)</span>
                                }
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}


@code {

    [Parameter]
    public Song? song { get; set; }

}
