@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Logging
@inject HttpClient _client
@inject ILogger<GuessInputComponent> _logger

@* todo send guess on guess phase end even if enter is not pressed *@

<Autocomplete @ref="AutocompleteComponent"
              @onkeypress="Onkeypress"
              TItem="string"
              TValue="string"
              Data="@currentDataSource"
              ReadData="@OnHandleReadData"
              TextField="@((item) => item)"
              ValueField="@((item) => item)"
              Placeholder="Enter your guess here"
              FreeTyping="true"
              MinLength="1"
              MaxMenuHeight="340px"
              AutoPreSelect="false"
              AutoSelectFirstItem="false"
              CustomFilter="CustomFilter"
              SelectedValueChanged="SelectedValueChanged"
              Disabled="QuizPage.PageState.VideoPlayerVisibility">
</Autocomplete>

<span>Guess: @QuizPage.PageState.Guess</span>

@code {

    [CascadingParameter]
    private QuizPage QuizPage { get; set; } = null!;

    private string[] AutocompleteData { get; set; } = Array.Empty<string>();

    public IEnumerable<string> currentDataSource = Array.Empty<string>();

    public Autocomplete<string, string> AutocompleteComponent { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        AutocompleteData = (await _client.GetFromJsonAsync<string[]>("autocomplete.json"))!;
    }

    private async Task OnHandleReadData(AutocompleteReadDataEventArgs autocompleteReadDataEventArgs)
    {
        if (!autocompleteReadDataEventArgs.CancellationToken.IsCancellationRequested)
        {
            currentDataSource = Autocomplete.SearchAutocomplete(autocompleteReadDataEventArgs.SearchValue, AutocompleteData);
        }
    }

    private bool CustomFilter(string item, string searchValue)
    {
        return true;
    }

    public void CallStateHasChanged()
    {
        StateHasChanged();
    }

    public async Task ClearInputField()
    {
        AutocompleteComponent.Clear(); // awaiting this causes signalr messages not to be processed in time (???)
        await Task.Delay(100);
        StateHasChanged();
    }

    private async Task Onkeypress(KeyboardEventArgs obj)
    {
        if (obj.Key is "Enter" or "NumpadEnter")
        {
            if (QuizPage.PageState.Guess != AutocompleteComponent.SelectedText)
            {
                QuizPage.PageState.Guess = AutocompleteComponent.SelectedText;
                await AutocompleteComponent.Close();
                StateHasChanged();

                await ClientState.Session!.hubConnection!.SendAsync("SendGuessChanged", QuizPage.PageState.Guess);
            }
        }
    }

    private async Task SelectedValueChanged(string arg)
    {
        currentDataSource = new List<string> { arg }; // work-around for an issue I'm too lazy to submit a report for
    }

    public void CallClose()
    {
        AutocompleteComponent.Close();
    }

}
