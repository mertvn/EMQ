@page "/LibraryPage"
@using Microsoft.Extensions.Logging
@using EMQ.Shared.Core.UI
@using EMQ.Client.Components
@using EMQ.Shared.Core
@using EMQ.Shared.Quiz.Entities.Concrete
@inject HttpClient _client
@inject ILogger<GuessInputComponent> _logger
@inject ClientUtils _clientUtils

<h3>Library</h3>

<p>Welcome to EMQ Library. Here you can contribute new song links to the game. Please read the upload criteria first. You also need to be logged in.</p>

<button class="btn btn-primary" type="button" @onclick="@(() => ShowUploadCriteria = !ShowUploadCriteria)" style="margin: 5px;">
    @UiHelpers.Bool2Text(ShowUploadCriteria, "Hide upload criteria", "Show upload criteria")
</button>
<div style="display: @UiHelpers.Bool2Display(ShowUploadCriteria)" id="collapseUploadCriteria">
    <p>Please only submit links matching the following criteria:</p>
    <ul>
        <li>Game size/short version if there is one.</li>
        <li>.mp3 and .webm formats are preferred, however we also accept .ogg and .mp4 currently.</li>
        <li>Uploaded to <a href="https://catbox.moe/">Catbox.</a> </li>
        <li>No excess silence or unrelated content at the start or end.</li>
        <li>No unofficial stuff.</li>
        <li>
            Videos should be of reasonable size and quality:
            <ul>
                <li>Ideally 720p resolution or less.</li>
                <li>Ideally between 24-30 FPS.</li>
                <li>Ideally between 1000-2000 kbps average bitrate.</li>
                <li>No subtitles.</li>
                <li>No "fake video"s (videos with a still picture).</li>
            </ul>
        </li>
    </ul>
</div>

<Blazorise.Tabs SelectedTab="@_selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
    <Items>
        <Blazorise.Tab Name="TabAutocompleteMst">Search by VN</Blazorise.Tab>
        <Blazorise.Tab Name="TabAutocompleteA">Search by artist</Blazorise.Tab>
        <Blazorise.Tab Name="TabVndbAdvsearch">Search by VNDB search</Blazorise.Tab>
        <Blazorise.Tab Name="TabMyList">My list</Blazorise.Tab>
        <Blazorise.Tab Name="TabStats">Stats</Blazorise.Tab>
    </Items>
    <Content>
        <Blazorise.TabPanel Name="TabAutocompleteMst">
            @* todo FreeTyping should be false after the artist autocomplete changes *@
            <GuessInputComponent Placeholder="Enter VN title here"
                                 FreeTyping="true"
                                 IsDisabled="false"
                                 IsQuizPage="false"
                                 @bind-Guess="@selectedMusicSourceTitle"
                                 Callback="SelectedResultChangedMst">
            </GuessInputComponent>
        </Blazorise.TabPanel>
        <Blazorise.TabPanel Name="TabAutocompleteA">
            <AutocompleteAComponent Placeholder="Enter artist name here"
                                    FreeTyping="true"
                                    IsDisabled="false"
                                    IsQuizPage="false"
                                    @bind-Guess="@selectedArtistId"
                                    Callback="SelectedResultChangedA">
            </AutocompleteAComponent>
        </Blazorise.TabPanel>
        <Blazorise.TabPanel Name="TabVndbAdvsearch">
            <p>Enter either full VNDB search URL or just the f parameter.</p>
            <p>Example: "https://vndb.org/v?q=&ch=&f=023gjaN3830X1o&s=j4w" or "023gjaN3830X1o" </p>
            <input @bind="VndbAdvsearchStr" type="text" name="VndbAdvsearchStr" style="margin: 5px"/><br/>
            <button id="ButtonFetchByVndbAdvsearch" class="btn btn-primary" type="button" style="margin: 5px" @onclick="OnclickButtonFetchByVndbAdvsearchStr">
                Fetch songs
            </button>
        </Blazorise.TabPanel>
        <Blazorise.TabPanel Name="TabMyList">
            @if (ClientState.Session?.VndbInfo.Labels != null)
            {
                   @* todo stats *@
                <button id="ButtonFetchMyList" class="btn btn-primary" type="button" style="margin: 5px" @onclick="OnclickButtonFetchMyList">
                    Fetch songs from my list
                </button>
            }
            else
            {
                <p>Your VNDB info is not set.</p>
            }
        </Blazorise.TabPanel>
        <Blazorise.TabPanel Name="TabStats">
            <LibraryStatsComponent></LibraryStatsComponent>
        </Blazorise.TabPanel>
    </Content>
</Blazorise.Tabs>

<div id="songsWrapper">
    <div>
        <select id="SongSelectionKind" style="margin: 5px" @oninput="OnLibrarySongFilterChanged">
            @foreach (LibrarySongFilterKind librarySongFilter in Enum.GetValues<LibrarySongFilterKind>())
            {
                <option value="@librarySongFilter">@librarySongFilter.GetDescription()</option>
            }
        </select>
        <label for="SongSelectionKind">Link filter</label>
        <br/>
    </div>
    @* todo: count shows 0 after searching by vn, but not when searching by artist or MyList (???) *@
    <span style="margin: 5px">Count: @VisibleSongsCount</span><br>

    <div class="songs d-flex flex-row flex-wrap" style="max-width: 1500px">
        @{ VisibleSongsCount = 0; }
        @foreach (Song song in CurrentSongs)
        {
            @if (true)
            {
                bool hasVideo = song.Links.Any(x => x.IsVideo);
                bool hasSound = song.Links.Any(x => !x.IsVideo);

                bool shouldDisplay = LibrarySongFilter switch
                {
                    LibrarySongFilterKind.All => true,
                    LibrarySongFilterKind.MissingVideoOrSound => !hasVideo || !hasSound,
                    LibrarySongFilterKind.MissingBoth =>  !hasVideo && !hasSound,
                    _ => throw new ArgumentOutOfRangeException()
                    };

                @if (shouldDisplay)
                {
                    VisibleSongsCount += 1;
                    // Console.WriteLine(JsonSerializer.Serialize(song, Utils.JsoIndented));
                    <div class="song card" style="margin: 16px; width: 300px; min-height:200px;">
                        <SongInfoCardComponent song="@song"/>
                        <div style="padding: 16px">
                            <div>
                                Video link:
                                @if (hasVideo)
                                {
                                    <span>✓</span>
                                }
                                else
                                {
                                    <span>✘</span>
                                }
                            </div>
                            <div>
                                Sound link:
                                @if (hasSound)
                                {
                                    <span>✓</span>
                                }
                                else
                                {
                                    <span>✘</span>
                                }
                            </div>

                            @if (!hasVideo || !hasSound)
                            {
                                <button class="btn btn-primary" style="margin-top: 5px" @onclick="@(() => ChangeActiveSong(song.Id))" disabled="@(ClientState.Session == null)">
                                    @UiHelpers.Bool2Text(ActiveSongId == song.Id, "Hide form", "Show form")
                                </button>
                                if (song.Id == ActiveSongId)
                                {
                                    <EditForm Model="@_addSongLinkModel" OnValidSubmit="@(() => SubmitSongUrl(song.Id, _addSongLinkModel.Url))">
                                        <DataAnnotationsValidator/>

                                        <div style="padding: 5px">
                                            <label for="songUrl">Add link: </label>
                                            <InputText id="songUrl" type="text" @bind-Value="_addSongLinkModel.Url"/>
                                            <ValidationMessage For="@(() => _addSongLinkModel.Url)"/>
                                        </div>
                                        <input style="margin-top: 5px" type="submit" class="btn btn-primary" value="Submit" disabled="@(ClientState.Session == null)"/>
                                    </EditForm>
                                }
                            }
                        </div>

                    </div>
                }
            }
        }

        @if (!CurrentSongs.Any())
        {
            @NoSongsText
        }

    </div>
</div>

<br/>
<div>
    <h4 style="font-size: 1.2rem">Review Queue</h4>
    <ReviewQueueComponent @ref="_reviewQueueComponent"></ReviewQueueComponent>
</div>
