@page "/LibraryPage"
@using Microsoft.Extensions.Logging
@using EMQ.Shared.Core.UI
@using EMQ.Client.Components
@using EMQ.Shared.Core
@using EMQ.Shared.Quiz.Entities.Concrete
@inject HttpClient _client
@inject ILogger<GuessInputComponent> _logger
@inject ClientUtils _clientUtils

<CascadingValue Value="@this" IsFixed="true">

<h3>Library</h3>

<p>Welcome to EMQ Library. Here you can contribute new song links to the game. Please read the upload criteria first. You also need to be logged in.</p>

<details>
    <summary>Upload criteria</summary>
    <p>Please only submit links matching the following criteria:</p>
    <ul>
        <li>Game size/short version if there is one.</li>
        <li>.mp3 and .webm formats are preferred, however we also accept .ogg and .mp4 currently.</li>
        <li>Uploaded to <a href="https://catbox.moe/">Catbox.</a> </li>
        <li>No excess silence or unrelated content at the start or end (links with more than 2 seconds of silence at the start are rejected without exceptions).</li>
        <li>No unofficial stuff.</li>
        <li>
            Videos should be of reasonable size and quality:
            <ul>
                <li>Ideally 720p resolution or less.</li>
                <li>Ideally between 24-30 FPS.</li>
                <li>Ideally between 1000-2500 kbps average bitrate.</li>
                <li>No subtitles.</li>
                <li>No "fake video"s (videos with a still picture).</li>
            </ul>
        </li>
    </ul>
</details>

<div style="border: 1px solid #ddd; padding: 5px">
    <Blazorise.Tabs @ref="@TabsComponent" SelectedTab="@_selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
        <Items>
            <Blazorise.Tab Name="TabAutocompleteMst">Search by VN</Blazorise.Tab>
            <Blazorise.Tab Name="TabAutocompleteA">Search by artist</Blazorise.Tab>
            <Blazorise.Tab Name="TabVndbAdvsearch">Search by VNDB search</Blazorise.Tab>
            <Blazorise.Tab Name="TabMyList">My list</Blazorise.Tab>
            <Blazorise.Tab Name="TabStats">Stats</Blazorise.Tab>
        </Items>
        <Content>
            <Blazorise.TabPanel Name="TabAutocompleteMst">
                @* todo FreeTyping should be false after the artist autocomplete changes *@
                <GuessInputComponent Placeholder="Enter VN title here"
                                     FreeTyping="true"
                                     IsDisabled="false"
                                     IsQuizPage="false"
                                     @bind-Guess="@selectedMusicSourceTitle"
                                     Callback="SelectedResultChangedMst">
                </GuessInputComponent>
            </Blazorise.TabPanel>
            <Blazorise.TabPanel Name="TabAutocompleteA">
                <AutocompleteAComponent Placeholder="Enter artist name here"
                                        FreeTyping="true"
                                        IsDisabled="false"
                                        IsQuizPage="false"
                                        @bind-Guess="@selectedArtist"
                                        Callback="SelectedResultChangedA">
                </AutocompleteAComponent>
            </Blazorise.TabPanel>
            <Blazorise.TabPanel Name="TabVndbAdvsearch">
                <p>Enter either full VNDB search URL or just the f parameter. Only VN search is supported at the moment.</p>
                <p>Example: "https://vndb.org/v?q=&ch=&f=023gjaN3830X1o&s=j4w" or "023gjaN3830X1o" </p>
                <p>Important: Add a Staff->Role=Vocals filter on VNDB to search faster and less wastefully. Example: "https://vndb.org/v?q=&ch=&f=0280HN385wsongs-".</p>
                <input @bind="VndbAdvsearchStr" type="text" name="VndbAdvsearchStr" style="margin: 5px; width: 700px;"/><br/>
                <button type="button" id="ButtonFetchByVndbAdvsearch" class="btn btn-primary" style="margin: 5px" @onclick="OnclickButtonFetchByVndbAdvsearchStr">
                    Fetch songs
                </button>
            </Blazorise.TabPanel>
            <Blazorise.TabPanel Name="TabMyList">
                @if (ClientState.Session?.VndbInfo.Labels != null)
                {
                   @* todo stats *@
                    <button type="button" id="ButtonFetchMyList" class="btn btn-primary" style="margin: 5px" @onclick="OnclickButtonFetchMyList">
                        Fetch vocal songs from my list
                    </button>
                }
                else
                {
                    <p>Your VNDB info is not set.</p>
                }
            </Blazorise.TabPanel>
            <Blazorise.TabPanel Name="TabStats">
                <LibraryStatsComponent></LibraryStatsComponent>
            </Blazorise.TabPanel>
        </Content>
    </Blazorise.Tabs>

    <div id="songsWrapper" style="border: 1px solid #ddd;">
        <div>
            <select id="SongSelectionKind" style="margin: 5px" @oninput="OnLibrarySongFilterChanged">
                @foreach (LibrarySongFilterKind librarySongFilter in Enum.GetValues<LibrarySongFilterKind>())
                {
                    <option value="@librarySongFilter">@librarySongFilter.GetDescription()</option>
                }
            </select>
            <label for="SongSelectionKind">Link filter</label>
            <br/>
        </div>

        @{
            var bgms = CurrentSongs.Where(x => x.Sources.Any(y => y.SongTypes.Any(z => z == SongSourceSongType.BGM))).ToList();
            var tabs = new Dictionary<string, List<Song>>();
            // var grouped = bgms
            //     .GroupBy(x => x.Sources.SelectMany(y => y.Links.Where(z => z.Type == SongSourceLinkType.MusicBrainz).Select(z => z.Url)))
            //     .First();

            // todo don't show releases that are not what's entered in the input box?
            var releases = bgms.SelectMany(x =>
                x.Sources.SelectMany(y =>
                    y.Links.Where(z =>
                        z.Type == SongSourceLinkType.MusicBrainzRelease))).DistinctBy(x => x.Url);

            // var releases = bgms.SelectMany(x => x.MusicBrainzReleases).Distinct();

            foreach (var release in releases)
            {
                var releaseString = release.Name.ToString();
                if (!tabs.ContainsKey(releaseString))
                {
                    tabs[releaseString] = new List<Song>();
                }

                foreach (Song bgm in bgms)
                {
                    // var asdf1 = bgm.Sources.SelectMany(y => y.Links).Where(z => z.Type == SongSourceLinkType.MusicBrainzRelease).Select(a => a.Url);
                    // if (asdf1.Contains(release))
                    // {
                    //     tabs[releaseString].Add(bgm);
                    // }

                    var songReleases = bgm.Sources.SelectMany(y => y.Links.Where(a => a.Type == SongSourceLinkType.MusicBrainzRelease).Select(z => z.Url)).Distinct();
                    // var songReleases = bgm.MusicBrainzReleases;
                    if (songReleases.Contains(release.Url))
                    {
                        tabs[releaseString].Add(bgm);
                    }
                }
            }
        }

        @* not sure how, but LazyReload is faster than LazyLoad for this *@
        <Blazorise.Tabs SelectedTab="@_selectedTab2" SelectedTabChanged="@OnSelectedTabChanged2" RenderMode="Blazorise.TabsRenderMode.LazyReload">
            <Items>
                <Blazorise.Tab Name="TabVNDB">VNDB</Blazorise.Tab>
                @* <Blazorise.Tab Name="TabMusicBrainz">MusicBrainz</Blazorise.Tab> *@
                @foreach ((string key, _) in tabs)
                {
                    <Blazorise.Tab @key="@key" Name="@key">@key</Blazorise.Tab>
                }
            </Items>
            <Content>
                <Blazorise.TabPanel Name="TabVNDB">
                    <SongInfoCardWrapperComponent
                        CurrentSongs="@CurrentSongs.Except(bgms)"
                        LibrarySongFilter="@LibrarySongFilter"
                        NoSongsText="@NoSongsText">
                    </SongInfoCardWrapperComponent>
                </Blazorise.TabPanel>
                @foreach ((string key, List<Song> value) in tabs)
                {
                    <Blazorise.TabPanel @key="@key" Name="@key">
                        <SongInfoCardWrapperComponent
                            CurrentSongs="value"
                            LibrarySongFilter="@LibrarySongFilter"
                            NoSongsText="@NoSongsText">
                        </SongInfoCardWrapperComponent>
                    </Blazorise.TabPanel>
                }
                @* <Blazorise.TabPanel Name="TabMusicBrainz"> *@
                @*     @if (true) *@
                @*     { *@
                @*     } *@
                @* </Blazorise.TabPanel> *@
            </Content>
        </Blazorise.Tabs>

    </div>
</div>

<br/>
<div style="border: 1px solid #ddd; padding: 5px">
    <h4 style="font-size: 1.2rem">Review Queue</h4>
    <ReviewQueueComponent @ref="_reviewQueueComponent"></ReviewQueueComponent>
</div>

</CascadingValue>
